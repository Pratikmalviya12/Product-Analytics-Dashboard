#!/usr/bin/env node

/**
 * GA4 Setup Helper Script
 * This script helps you configure your GA4 environment variables
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üöÄ GA4 Setup Helper for Product Analytics Dashboard\n');

const questions = [
  {
    key: 'VITE_GA4_MEASUREMENT_ID',
    question: 'Enter your GA4 Measurement ID (format: G-XXXXXXXXXX): ',
    validate: (value) => /^G-[A-Z0-9]{10}$/.test(value),
    errorMsg: 'Invalid format. Should be G-XXXXXXXXXX (e.g., G-1234567890)'
  },
  {
    key: 'VITE_GA4_PROPERTY_ID',
    question: 'Enter your GA4 Property ID (numbers only, e.g., 123456789): ',
    validate: (value) => /^\d+$/.test(value),
    errorMsg: 'Invalid format. Should be numbers only (e.g., 123456789)'
  }
];

async function askQuestion(question) {
  return new Promise((resolve) => {
    const ask = () => {
      rl.question(question.question, (answer) => {
        if (question.validate(answer.trim())) {
          resolve(answer.trim());
        } else {
          console.log(`‚ùå ${question.errorMsg}`);
          ask();
        }
      });
    };
    ask();
  });
}

async function main() {
  try {
    const config = {};
    
    // Ask questions
    for (const question of questions) {
      config[question.key] = await askQuestion(question);
    }
    
    // Create .env.local content
    const envContent = `# Google Analytics 4 Configuration
# Generated by GA4 Setup Helper on ${new Date().toISOString()}

# Your GA4 Measurement ID (found in Google Analytics > Admin > Data Streams)
${config.VITE_GA4_MEASUREMENT_ID_key || 'VITE_GA4_MEASUREMENT_ID'}=${config.VITE_GA4_MEASUREMENT_ID}

# Your GA4 Property ID (for Data API access)
${config.VITE_GA4_PROPERTY_ID_key || 'VITE_GA4_PROPERTY_ID'}=${config.VITE_GA4_PROPERTY_ID}

# Development settings
VITE_GA4_DEBUG_MODE=true

# Optional: Custom tracking settings
VITE_GA4_ANONYMIZE_IP=true
VITE_GA4_ALLOW_GOOGLE_SIGNALS=false
`;

    // Write .env.local file
    const envPath = path.join(process.cwd(), '.env.local');
    fs.writeFileSync(envPath, envContent);
    
    console.log('\n‚úÖ Configuration saved to .env.local');
    
    // Update index.html
    const indexPath = path.join(process.cwd(), 'index.html');
    if (fs.existsSync(indexPath)) {
      let indexContent = fs.readFileSync(indexPath, 'utf8');
      
      // Replace GA_MEASUREMENT_ID with actual measurement ID
      indexContent = indexContent.replace(/GA_MEASUREMENT_ID/g, config.VITE_GA4_MEASUREMENT_ID);
      
      fs.writeFileSync(indexPath, indexContent);
      console.log('‚úÖ Updated index.html with your Measurement ID');
    }
    
    console.log('\nüéâ GA4 Setup Complete!');
    console.log('\nNext Steps:');
    console.log('1. Set up your Service Account JSON for GA4 Data API');
    console.log('2. Start your development server: npm run dev');
    console.log('3. Check browser console for GA4 tracking confirmations');
    console.log('4. Verify real-time data in Google Analytics');
    console.log('\nFor detailed instructions, see GA4_SETUP_GUIDE.md\n');
    
  } catch (error) {
    console.error('‚ùå Error setting up GA4:', error.message);
  } finally {
    rl.close();
  }
}

// Check if running directly
if (require.main === module) {
  main();
}

module.exports = { main };
